// Code generated by xgen. DO NOT EDIT.

use serde_xml_rs::from_reader;
use crate::xlink::{SimpleAttrs};

#[derive(Debug, Serialize, Deserialize)]
struct WMS_Capabilities {
	#[serde(rename = "version")]
	pub Version: Vec<char>,
	#[serde(rename = "updateSequence")]
	pub UpdateSequence: Vec<char>,
	#[serde(rename = "wms:Service")]
	pub WmsService: Service,
	#[serde(rename = "wms:Capability")]
	pub WmsCapability: Capability,
}

#[derive(Debug, Serialize, Deserialize)]
struct Name {
	#[serde(rename = "Name")]
	pub Name: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct Title {
	#[serde(rename = "Title")]
	pub Title: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct Abstract {
	#[serde(rename = "Abstract")]
	pub Abstract: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct KeywordList {
	#[serde(rename = "wms:Keyword")]
	pub WmsKeyword: Vec<Keyword>,
}

#[derive(Debug, Serialize, Deserialize)]
struct Keyword {
	#[serde(rename = "vocabulary")]
	pub Vocabulary: Vec<char>,
}

#[derive(Debug, Serialize, Deserialize)]
struct OnlineResource {
	#[serde(rename = "xlink:simpleAttrs")]
	pub XlinkSimpleAttrs: Vec<SimpleAttrs>,
}

#[derive(Debug, Serialize, Deserialize)]
struct Format {
	#[serde(rename = "Format")]
	pub Format: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct Service {
	#[serde(rename = "Name")]
	pub Name: char,
	#[serde(rename = "wms:Title")]
	pub WmsTitle: char,
	#[serde(rename = "wms:Abstract")]
	pub WmsAbstract: char,
	#[serde(rename = "wms:KeywordList")]
	pub WmsKeywordList: KeywordList,
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
	#[serde(rename = "wms:ContactInformation")]
	pub WmsContactInformation: ContactInformation,
	#[serde(rename = "wms:Fees")]
	pub WmsFees: char,
	#[serde(rename = "wms:AccessConstraints")]
	pub WmsAccessConstraints: char,
	#[serde(rename = "wms:LayerLimit")]
	pub WmsLayerLimit: isize,
	#[serde(rename = "wms:MaxWidth")]
	pub WmsMaxWidth: isize,
	#[serde(rename = "wms:MaxHeight")]
	pub WmsMaxHeight: isize,
}

#[derive(Debug, Serialize, Deserialize)]
struct ContactInformation {
	#[serde(rename = "wms:ContactPersonPrimary")]
	pub WmsContactPersonPrimary: ContactPersonPrimary,
	#[serde(rename = "wms:ContactPosition")]
	pub WmsContactPosition: char,
	#[serde(rename = "wms:ContactAddress")]
	pub WmsContactAddress: ContactAddress,
	#[serde(rename = "wms:ContactVoiceTelephone")]
	pub WmsContactVoiceTelephone: char,
	#[serde(rename = "wms:ContactFacsimileTelephone")]
	pub WmsContactFacsimileTelephone: char,
	#[serde(rename = "wms:ContactElectronicMailAddress")]
	pub WmsContactElectronicMailAddress: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct ContactPersonPrimary {
	#[serde(rename = "wms:ContactPerson")]
	pub WmsContactPerson: char,
	#[serde(rename = "wms:ContactOrganization")]
	pub WmsContactOrganization: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct ContactPerson {
	#[serde(rename = "ContactPerson")]
	pub ContactPerson: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct ContactOrganization {
	#[serde(rename = "ContactOrganization")]
	pub ContactOrganization: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct ContactPosition {
	#[serde(rename = "ContactPosition")]
	pub ContactPosition: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct ContactAddress {
	#[serde(rename = "wms:AddressType")]
	pub WmsAddressType: char,
	#[serde(rename = "wms:Address")]
	pub WmsAddress: char,
	#[serde(rename = "wms:City")]
	pub WmsCity: char,
	#[serde(rename = "wms:StateOrProvince")]
	pub WmsStateOrProvince: char,
	#[serde(rename = "wms:PostCode")]
	pub WmsPostCode: char,
	#[serde(rename = "wms:Country")]
	pub WmsCountry: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct AddressType {
	#[serde(rename = "AddressType")]
	pub AddressType: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct Address {
	#[serde(rename = "Address")]
	pub Address: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct City {
	#[serde(rename = "City")]
	pub City: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct StateOrProvince {
	#[serde(rename = "StateOrProvince")]
	pub StateOrProvince: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct PostCode {
	#[serde(rename = "PostCode")]
	pub PostCode: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct Country {
	#[serde(rename = "Country")]
	pub Country: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct ContactVoiceTelephone {
	#[serde(rename = "ContactVoiceTelephone")]
	pub ContactVoiceTelephone: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct ContactFacsimileTelephone {
	#[serde(rename = "ContactFacsimileTelephone")]
	pub ContactFacsimileTelephone: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct ContactElectronicMailAddress {
	#[serde(rename = "ContactElectronicMailAddress")]
	pub ContactElectronicMailAddress: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct Fees {
	#[serde(rename = "Fees")]
	pub Fees: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct AccessConstraints {
	#[serde(rename = "AccessConstraints")]
	pub AccessConstraints: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct LayerLimit {
	#[serde(rename = "LayerLimit")]
	pub LayerLimit: isize,
}

#[derive(Debug, Serialize, Deserialize)]
struct MaxWidth {
	#[serde(rename = "MaxWidth")]
	pub MaxWidth: isize,
}

#[derive(Debug, Serialize, Deserialize)]
struct MaxHeight {
	#[serde(rename = "MaxHeight")]
	pub MaxHeight: isize,
}

#[derive(Debug, Serialize, Deserialize)]
struct Capability {
	#[serde(rename = "wms:Request")]
	pub WmsRequest: Request,
	#[serde(rename = "wms:Exception")]
	pub WmsException: Exception,
	#[serde(rename = "wms:_ExtendedCapabilities")]
	pub Wms_ExtendedCapabilities: Vec<f64>,
	#[serde(rename = "wms:Layer")]
	pub WmsLayer: Layer,
}

#[derive(Debug, Serialize, Deserialize)]
struct Request {
	#[serde(rename = "wms:GetCapabilities")]
	pub WmsGetCapabilities: OperationType,
	#[serde(rename = "wms:GetMap")]
	pub WmsGetMap: OperationType,
	#[serde(rename = "wms:GetFeatureInfo")]
	pub WmsGetFeatureInfo: OperationType,
	#[serde(rename = "wms:_ExtendedOperation")]
	pub Wms_ExtendedOperation: Vec<OperationType>,
}

#[derive(Debug, Serialize, Deserialize)]
struct GetCapabilities {
	#[serde(rename = "GetCapabilities")]
	pub GetCapabilities: OperationType,
}

#[derive(Debug, Serialize, Deserialize)]
struct GetMap {
	#[serde(rename = "GetMap")]
	pub GetMap: OperationType,
}

#[derive(Debug, Serialize, Deserialize)]
struct GetFeatureInfo {
	#[serde(rename = "GetFeatureInfo")]
	pub GetFeatureInfo: OperationType,
}

#[derive(Debug, Serialize, Deserialize)]
struct _ExtendedOperation {
	#[serde(rename = "_ExtendedOperation")]
	pub _ExtendedOperation: OperationType,
}

#[derive(Debug, Serialize, Deserialize)]
struct OperationType {
	#[serde(rename = "wms:Format")]
	pub WmsFormat: Vec<char>,
	#[serde(rename = "wms:DCPType")]
	pub WmsDCPType: Vec<DCPType>,
}

#[derive(Debug, Serialize, Deserialize)]
struct DCPType {
	#[serde(rename = "wms:HTTP")]
	pub WmsHTTP: HTTP,
}

#[derive(Debug, Serialize, Deserialize)]
struct HTTP {
	#[serde(rename = "wms:Get")]
	pub WmsGet: Get,
	#[serde(rename = "wms:Post")]
	pub WmsPost: Post,
}

#[derive(Debug, Serialize, Deserialize)]
struct Get {
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
}

#[derive(Debug, Serialize, Deserialize)]
struct Post {
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
}

#[derive(Debug, Serialize, Deserialize)]
struct Exception {
	#[serde(rename = "wms:Format")]
	pub WmsFormat: Vec<char>,
}

#[derive(Debug, Serialize, Deserialize)]
struct _ExtendedCapabilities {
	#[serde(rename = "_ExtendedCapabilities")]
	pub _ExtendedCapabilities: f64,
}

#[derive(Debug, Serialize, Deserialize)]
struct Layer {
	#[serde(rename = "queryable")]
	pub Queryable: Vec<bool>,
	#[serde(rename = "cascaded")]
	pub Cascaded: Vec<isize>,
	#[serde(rename = "opaque")]
	pub Opaque: Vec<bool>,
	#[serde(rename = "noSubsets")]
	pub NoSubsets: Vec<bool>,
	#[serde(rename = "fixedWidth")]
	pub FixedWidth: Vec<isize>,
	#[serde(rename = "fixedHeight")]
	pub FixedHeight: Vec<isize>,
	#[serde(rename = "wms:Name")]
	pub WmsName: char,
	#[serde(rename = "wms:Title")]
	pub WmsTitle: char,
	#[serde(rename = "wms:Abstract")]
	pub WmsAbstract: char,
	#[serde(rename = "wms:KeywordList")]
	pub WmsKeywordList: KeywordList,
	#[serde(rename = "wms:CRS")]
	pub WmsCRS: Vec<char>,
	#[serde(rename = "wms:EX_GeographicBoundingBox")]
	pub WmsEX_GeographicBoundingBox: EX_GeographicBoundingBox,
	#[serde(rename = "wms:BoundingBox")]
	pub WmsBoundingBox: Vec<BoundingBox>,
	#[serde(rename = "wms:Dimension")]
	pub WmsDimension: Vec<Dimension>,
	#[serde(rename = "wms:Attribution")]
	pub WmsAttribution: Attribution,
	#[serde(rename = "wms:AuthorityURL")]
	pub WmsAuthorityURL: Vec<AuthorityURL>,
	#[serde(rename = "wms:Identifier")]
	pub WmsIdentifier: Vec<Identifier>,
	#[serde(rename = "wms:MetadataURL")]
	pub WmsMetadataURL: Vec<MetadataURL>,
	#[serde(rename = "wms:DataURL")]
	pub WmsDataURL: Vec<DataURL>,
	#[serde(rename = "wms:FeatureListURL")]
	pub WmsFeatureListURL: Vec<FeatureListURL>,
	#[serde(rename = "wms:Style")]
	pub WmsStyle: Vec<Style>,
	#[serde(rename = "wms:MinScaleDenominator")]
	pub WmsMinScaleDenominator: f64,
	#[serde(rename = "wms:MaxScaleDenominator")]
	pub WmsMaxScaleDenominator: f64,
	#[serde(rename = "wms:Layer")]
	pub WmsLayer: Vec<Layer>,
}

#[derive(Debug, Serialize, Deserialize)]
struct CRS {
	#[serde(rename = "CRS")]
	pub CRS: char,
}

#[derive(Debug, Serialize, Deserialize)]
struct EX_GeographicBoundingBox {
	#[serde(rename = "westBoundLongitude")]
	pub WestBoundLongitude: f64,
	#[serde(rename = "eastBoundLongitude")]
	pub EastBoundLongitude: f64,
	#[serde(rename = "southBoundLatitude")]
	pub SouthBoundLatitude: f64,
	#[serde(rename = "northBoundLatitude")]
	pub NorthBoundLatitude: f64,
}

#[derive(Debug, Serialize, Deserialize)]
struct BoundingBox {
	#[serde(rename = "CRS")]
	pub CRS: Vec<char>,
	#[serde(rename = "minx")]
	pub Minx: Vec<f64>,
	#[serde(rename = "miny")]
	pub Miny: Vec<f64>,
	#[serde(rename = "maxx")]
	pub Maxx: Vec<f64>,
	#[serde(rename = "maxy")]
	pub Maxy: Vec<f64>,
	#[serde(rename = "resx")]
	pub Resx: Vec<f64>,
	#[serde(rename = "resy")]
	pub Resy: Vec<f64>,
}

#[derive(Debug, Serialize, Deserialize)]
struct Dimension {
	#[serde(rename = "name")]
	pub Name: Vec<char>,
	#[serde(rename = "units")]
	pub Units: Vec<char>,
	#[serde(rename = "unitSymbol")]
	pub UnitSymbol: Vec<char>,
	#[serde(rename = "default")]
	pub Default: Vec<char>,
	#[serde(rename = "multipleValues")]
	pub MultipleValues: Vec<bool>,
	#[serde(rename = "nearestValue")]
	pub NearestValue: Vec<bool>,
	#[serde(rename = "current")]
	pub Current: Vec<bool>,
}

#[derive(Debug, Serialize, Deserialize)]
struct Attribution {
	#[serde(rename = "wms:Title")]
	pub WmsTitle: char,
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
	#[serde(rename = "wms:LogoURL")]
	pub WmsLogoURL: LogoURL,
}

#[derive(Debug, Serialize, Deserialize)]
struct LogoURL {
	#[serde(rename = "width")]
	pub Width: Vec<isize>,
	#[serde(rename = "height")]
	pub Height: Vec<isize>,
	#[serde(rename = "wms:Format")]
	pub WmsFormat: char,
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
}

#[derive(Debug, Serialize, Deserialize)]
struct MetadataURL {
	#[serde(rename = "type")]
	pub Type: Vec<char>,
	#[serde(rename = "wms:Format")]
	pub WmsFormat: char,
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
}

#[derive(Debug, Serialize, Deserialize)]
struct AuthorityURL {
	#[serde(rename = "name")]
	pub Name: Vec<char>,
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
}

#[derive(Debug, Serialize, Deserialize)]
struct Identifier {
	#[serde(rename = "authority")]
	pub Authority: Vec<char>,
}

#[derive(Debug, Serialize, Deserialize)]
struct DataURL {
	#[serde(rename = "wms:Format")]
	pub WmsFormat: char,
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
}

#[derive(Debug, Serialize, Deserialize)]
struct FeatureListURL {
	#[serde(rename = "wms:Format")]
	pub WmsFormat: char,
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
}

#[derive(Debug, Serialize, Deserialize)]
struct Style {
	#[serde(rename = "wms:Name")]
	pub WmsName: char,
	#[serde(rename = "wms:Title")]
	pub WmsTitle: char,
	#[serde(rename = "wms:Abstract")]
	pub WmsAbstract: char,
	#[serde(rename = "wms:LegendURL")]
	pub WmsLegendURL: Vec<LegendURL>,
	#[serde(rename = "wms:StyleSheetURL")]
	pub WmsStyleSheetURL: StyleSheetURL,
	#[serde(rename = "wms:StyleURL")]
	pub WmsStyleURL: StyleURL,
}

#[derive(Debug, Serialize, Deserialize)]
struct LegendURL {
	#[serde(rename = "width")]
	pub Width: Vec<isize>,
	#[serde(rename = "height")]
	pub Height: Vec<isize>,
	#[serde(rename = "wms:Format")]
	pub WmsFormat: char,
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
}

#[derive(Debug, Serialize, Deserialize)]
struct StyleSheetURL {
	#[serde(rename = "wms:Format")]
	pub WmsFormat: char,
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
}

#[derive(Debug, Serialize, Deserialize)]
struct StyleURL {
	#[serde(rename = "wms:Format")]
	pub WmsFormat: char,
	#[serde(rename = "wms:OnlineResource")]
	pub WmsOnlineResource: OnlineResource,
}

#[derive(Debug, Serialize, Deserialize)]
struct MinScaleDenominator {
	#[serde(rename = "MinScaleDenominator")]
	pub MinScaleDenominator: f64,
}

#[derive(Debug, Serialize, Deserialize)]
struct MaxScaleDenominator {
	#[serde(rename = "MaxScaleDenominator")]
	pub MaxScaleDenominator: f64,
}
